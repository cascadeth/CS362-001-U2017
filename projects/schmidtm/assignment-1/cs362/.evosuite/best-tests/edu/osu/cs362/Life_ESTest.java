/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 03 04:50:44 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.osu.cs362.Life;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Life_ESTest extends Life_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        Life.show((boolean[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.osu.cs362.Life", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Life.nextGen((boolean[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.osu.cs362.Life", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean[][] booleanArray0 = Life.gen();
      SystemInUtil.addInputLine("\n");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\"_w@tg}";
      Life.main(stringArray0);
      Life.gen();
      Life.nextGen(booleanArray0);
      boolean[][] booleanArray1 = Life.gen();
      Life.show(booleanArray0);
      Life.nextGen(booleanArray1);
      // Undeclared exception!
      try { 
        Life.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean[][] booleanArray0 = Life.gen();
      Life.show(booleanArray0);
      Life.occupiedNext(1, true);
      Life.gen();
      Life life0 = new Life();
      Life.show(booleanArray0);
      Life.show(booleanArray0);
      boolean[][] booleanArray1 = Life.gen();
      Life.gen();
      Life.gen();
      Life.occupiedNext(2, true);
      Life.show(booleanArray0);
      Life.nextGen(booleanArray0);
      Life.gen();
      Life.nextGen(booleanArray0);
      Life.gen();
      Life.show(booleanArray1);
      Life.occupiedNext(2305, false);
      String[] stringArray0 = new String[6];
      stringArray0[1] = "hBk j4p4 6pO!!";
      stringArray0[2] = "fG";
      stringArray0[3] = "";
      stringArray0[4] = "y!?@xE:R";
      stringArray0[5] = "";
      // Undeclared exception!
      try { 
        Life.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Life.gen();
      Life life0 = new Life();
      boolean[][] booleanArray0 = new boolean[8][6];
      boolean[] booleanArray1 = new boolean[6];
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      booleanArray1[2] = false;
      booleanArray1[3] = false;
      booleanArray1[4] = true;
      booleanArray1[5] = false;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[5];
      booleanArray2[0] = true;
      booleanArray2[1] = true;
      booleanArray2[2] = false;
      booleanArray2[3] = true;
      booleanArray2[4] = true;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[0];
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[6];
      booleanArray4[0] = false;
      booleanArray4[1] = true;
      booleanArray4[2] = true;
      booleanArray4[3] = true;
      booleanArray4[4] = true;
      booleanArray4[5] = false;
      booleanArray0[3] = booleanArray4;
      boolean[] booleanArray5 = new boolean[8];
      booleanArray5[0] = false;
      booleanArray5[1] = true;
      booleanArray5[2] = false;
      booleanArray5[3] = true;
      booleanArray5[4] = false;
      booleanArray5[5] = true;
      booleanArray5[6] = true;
      booleanArray5[7] = true;
      booleanArray0[4] = booleanArray5;
      boolean[] booleanArray6 = new boolean[3];
      booleanArray6[0] = true;
      booleanArray6[1] = true;
      booleanArray6[2] = true;
      booleanArray0[5] = booleanArray6;
      boolean[] booleanArray7 = new boolean[1];
      booleanArray7[0] = true;
      booleanArray0[6] = booleanArray7;
      boolean[] booleanArray8 = new boolean[0];
      booleanArray0[7] = booleanArray8;
      Life.show(booleanArray0);
      Life.gen();
      Life.occupiedNext(3, false);
      Life.gen();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "=Qku]";
      stringArray0[2] = "rHP]<R/#~J&id";
      stringArray0[3] = "2e&.A56o$Q+>";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        Life.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Life.occupiedNext((-1), false);
      boolean[][] booleanArray0 = new boolean[6][3];
      boolean[] booleanArray1 = new boolean[6];
      booleanArray1[0] = false;
      booleanArray1[1] = false;
      booleanArray1[2] = false;
      booleanArray1[3] = false;
      booleanArray1[4] = false;
      booleanArray1[5] = false;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[4];
      booleanArray2[0] = false;
      booleanArray2[1] = false;
      booleanArray2[2] = false;
      booleanArray2[3] = false;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[5];
      booleanArray3[0] = false;
      booleanArray3[1] = false;
      booleanArray3[2] = false;
      booleanArray3[3] = false;
      booleanArray3[4] = false;
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[7];
      booleanArray4[0] = false;
      booleanArray4[1] = false;
      booleanArray4[2] = false;
      booleanArray4[3] = false;
      booleanArray4[4] = false;
      booleanArray4[5] = false;
      booleanArray4[6] = false;
      booleanArray0[3] = booleanArray4;
      boolean[] booleanArray5 = new boolean[3];
      booleanArray5[0] = false;
      booleanArray5[1] = false;
      booleanArray5[2] = false;
      booleanArray0[4] = booleanArray5;
      boolean[] booleanArray6 = new boolean[1];
      booleanArray6[0] = false;
      booleanArray0[5] = booleanArray6;
      Life.show(booleanArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Life.occupiedNext(0, false);
      boolean[][] booleanArray0 = Life.gen();
      Life.occupiedNext(1, false);
      Life.occupiedNext(1, false);
      Life.show(booleanArray0);
      Life life0 = new Life();
      Life.gen();
      Life.occupiedNext(0, true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[0] = "WJr";
      stringArray0[2] = "99Ez&aH";
      stringArray0[3] = "";
      stringArray0[4] = "BD";
      // Undeclared exception!
      try { 
        Life.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean[][] booleanArray0 = new boolean[3][5];
      boolean[] booleanArray1 = new boolean[7];
      booleanArray1[0] = true;
      booleanArray1[1] = true;
      booleanArray1[2] = true;
      booleanArray1[3] = false;
      booleanArray1[4] = true;
      booleanArray1[5] = false;
      booleanArray1[6] = true;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[6];
      booleanArray2[0] = true;
      booleanArray2[1] = true;
      booleanArray2[2] = true;
      booleanArray2[3] = false;
      booleanArray2[4] = true;
      booleanArray2[5] = true;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[7];
      booleanArray3[0] = true;
      booleanArray3[1] = true;
      booleanArray3[2] = false;
      booleanArray3[3] = true;
      booleanArray3[4] = true;
      booleanArray3[5] = true;
      booleanArray3[6] = false;
      booleanArray0[2] = booleanArray3;
      // Undeclared exception!
      try { 
        Life.nextGen(booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Life.gen();
      String[] stringArray0 = new String[2];
      SystemInUtil.addInputLine("$HY`?");
      stringArray0[0] = "$HY`?";
      stringArray0[1] = "\n";
      // Undeclared exception!
      try { 
        Life.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean[][] booleanArray0 = Life.gen();
      boolean[][] booleanArray1 = Life.nextGen(booleanArray0);
      Life.occupiedNext(0, true);
      boolean[][] booleanArray2 = Life.nextGen(booleanArray1);
      Life.show(booleanArray2);
      boolean[][] booleanArray3 = new boolean[2][2];
      boolean[] booleanArray4 = new boolean[7];
      booleanArray4[0] = true;
      booleanArray4[1] = true;
      booleanArray4[2] = false;
      booleanArray4[3] = true;
      booleanArray4[4] = false;
      booleanArray4[5] = true;
      booleanArray4[6] = false;
      booleanArray3[0] = booleanArray4;
      boolean[] booleanArray5 = new boolean[9];
      booleanArray5[0] = true;
      booleanArray5[1] = true;
      booleanArray5[2] = true;
      booleanArray5[3] = false;
      booleanArray5[4] = false;
      booleanArray5[5] = true;
      booleanArray5[6] = true;
      booleanArray5[7] = false;
      booleanArray5[8] = true;
      booleanArray3[1] = booleanArray5;
      Life.show(booleanArray3);
      Life life0 = new Life();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*";
      stringArray0[1] = "*";
      stringArray0[2] = "";
      // Undeclared exception!
      try { 
        Life.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
